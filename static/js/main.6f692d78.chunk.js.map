{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","redux/contacts/contactsSlice.js","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.js","components/App/App.js","redux/store.js","index.js"],"names":["module","exports","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","Container","children","className","s","container","SignupForm","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","onSubmit","preventDefault","form","label","title","input","type","onChange","pattern","required","button","Filter","ContactListItem","contacts","item","contact","onClick","id","ContactList","list","map","Spinner","styled","div","SpinnerLoader","color","height","width","App","filter","setFilter","data","isFetching","titlePhonebbok","titleContacts","currentTarget","normilizedFilter","toLowerCase","includes","getVisibleContacts","store","configureStore","reducer","middleware","getDefaultMiddleware","logger","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.6f692d78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__7jST6\",\"label\":\"ContactForm_label__3hec1\",\"title\":\"ContactForm_title__EtQfI\",\"input\":\"ContactForm_input__39DVE\",\"button\":\"ContactForm_button__2PuTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__TQR9e\",\"contact\":\"ContactListItem_contact__3_a_R\",\"name\":\"ContactListItem_name__2BBzd\",\"number\":\"ContactListItem_number__zHGFd\",\"button\":\"ContactListItem_button__1Elq7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__WiJCd\",\"title\":\"Filter_title__3Bkb7\",\"input\":\"Filter_input__gDHwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePhonebbok\":\"App_titlePhonebbok__2QPGF\",\"titleContacts\":\"App_titleContacts__2fLWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3XCpn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1pp0g\"};","//with RTK-query\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contacts',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://616af39216e7120017fa1160.mockapi.io/api/v1' }),\r\n  tagTypes:['Contact'],\r\n  endpoints: (builder) => ({\r\n    fetchContacts: builder.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (contactId) => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    })\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactsApi\r\n\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={s.container}>{children}</div>;\r\n\r\nexport default Container;","import  { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { useCreateContactMutation } from '../../redux/contacts/contactsSlice';\r\n\r\nexport default function SignupForm ()  {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const [createContact] = useCreateContactMutation();\r\n    \r\n    const handleChange = e => {\r\n        const {name, value} = e.target\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n     const handleSubmit = e => {\r\n        e.preventDefault();\r\n        createContact({ name, number });\r\n        reset();\r\n    }\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    return (\r\n        <form  onSubmit={handleSubmit} className={s.form}>\r\n                <label className={s.label}>\r\n                    <span className={s.title}>Name</span>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label className={s.label}>\r\n                    <span className={s.title}>Number</span>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={handleChange}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button className={s.button} type=\"submit\">Add contact</button>\r\n            </form>\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={s.label}>\r\n      <span className={s.title}>Find contacts by name</span>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  )\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange:PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useDeleteContactMutation} from '../../redux/contacts/contactsSlice'\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ contacts }) => {\r\n\r\n  const [deleteContact] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <p className={s.contact}>\r\n        <span className={s.name}>{contacts.name}:\r\n        </span>\r\n        <span className={s.number}>{contacts.number}\r\n        </span>\r\n      </p>\r\n      <button className={s.button} onClick={() => deleteContact(contacts.id)}>Delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }),\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nconst ContactList = ({contacts}) => (\r\n    <ul className={s.list}>\r\n        {contacts.map((contacts)=> (\r\n            <li key={contacts.id}  >\r\n                <ContactListItem contacts={contacts}/>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n};\r\n\r\nexport default ContactList;\r\n\r\n ","import styled from '@emotion/styled'\r\n\r\nexport const Spinner = styled.div`\r\n    width:80px;\r\n    margin-left:auto;\r\n    margin-right:auto;\r\n`","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {Spinner} from './Loader.styled.jsx'\r\n\r\nconst SpinnerLoader = () => (\r\n    <Spinner>\r\n        <Loader type=\"ThreeDots\" color=\"#B86B82\" height={80} width={80} />\r\n    </Spinner>\r\n)\r\n\r\nexport default SpinnerLoader;\r\n","import React, { useState } from 'react';\nimport {useFetchContactsQuery} from '../../redux/contacts/contactsSlice'\nimport s from './App.module.css';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\nimport SpinnerLoader from '../Loader';\n\nfunction App() {\n  const [filter, setFilter] = useState('');\n\n  const { data, isFetching } = useFetchContactsQuery();\n  \n  const changeFilter = e => {\n    setFilter(e.currentTarget.value)\n  }\n\n  const getVisibleContacts = () => {\n    const normilizedFilter = filter.toLowerCase();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedFilter));\n  }\n  \n    return (\n      <Container>\n        <div>\n          <h1 className={s.titlePhonebbok}>Phonebook</h1>\n          <ContactForm />\n          <h2 className={s.titleContacts}>Contacts</h2>\n          <Filter value={filter} onChange={changeFilter} />\n          {isFetching && <SpinnerLoader />}\n          {data && <ContactList contacts={getVisibleContacts()}/>}\n        </div>\n      </Container>\n    );\n  \n}\n\nexport default App;\n\n\n","import { configureStore} from \"@reduxjs/toolkit\";\r\nimport {contactsApi} from './contacts/contactsSlice'\r\nimport logger from 'redux-logger';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        [contactsApi.reducerPath]:contactsApi.reducer,\r\n    },\r\n    middleware: getDefaultMiddleware => [\r\n        ...getDefaultMiddleware(),\r\n        logger,\r\n        contactsApi.middleware,\r\n    ]\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n//import { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}